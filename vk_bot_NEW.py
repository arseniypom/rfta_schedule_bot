import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.keyboard import VkKeyboard
from datetime import datetime
import requests
from vk_api import VkUpload
import time
import json


# –ü–ê–†–°–ï–†–´
from bs4 import BeautifulSoup as bs

headers = {'accept': 'image/webp,*/*', 'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:66.0) Gecko/20100101 Firefox/66.0'}
check_url = 'http://fem.vavt.ru/schedule'

def img_parse(base_url,headers):
    session = requests.Session()
    request = session.get(base_url, headers=headers)
    if request.status_code == 200:
        soup = bs(request.content, 'html.parser')
        div = soup.find_all('div', attrs={'id': 'content1'})
        for div in div:
                src = div.find('img', attrs={'id': None})['src']
    return src

def vavt_schedule_parse_1(check_url,headers):
    session = requests.Session()
    request = session.get(check_url, headers=headers)
    if request.status_code == 200:
        soup = bs(request.content, 'html.parser')
        td = soup.find('td', {'width': '34%', 'valign':'top'})
        tags = td.find_all('a')
        for tag in tags:
            if tag.text == cours_name:
                href = tag.get('href')
                return href


def vavt_schedule_parse_2(check_url,headers):
    session = requests.Session()
    request = session.get(check_url, headers=headers)
    if request.status_code == 200:
        soup = bs(request.content, 'html.parser')
        td = soup.find('td', {'width': '33%', 'valign':'top'})
        tags = td.find_all('a')
        for tag in tags:
            if tag.text == cours_name:
                href = tag.get('href')
                return href


# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
token= "token"
vk_session = vk_api.VkApi(token = token)

session = requests.Session()

session_api = vk_session.get_api()
longpoll = VkLongPoll(vk_session)

# –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
def create_keyboard(response):
    keyboard = VkKeyboard(one_time=True)

    if response == '–¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã':
        return keyboard.get_empty_keyboard()

    keyboard = keyboard.get_keyboard()
    return keyboard


def get_button(label, color, payload=""):
    return {
        "action": {
            "type": "text",
            "payload": json.dumps(payload),
            "label": label},
        "color": color
     }


keyboard1 = {
    "one_time": True,
    "buttons": [

        [get_button(label="–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", color="primary")]

        ]
    }

keyboard2 = {
    "one_time": True,
    "buttons": [

        [get_button(label="–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã", color="primary")]

        ]
    }


keyboard1 = json.dumps(keyboard1, ensure_ascii=False).encode('utf-8')
keyboard2 = json.dumps(keyboard2, ensure_ascii=False).encode('utf-8')
keyboard1 = str(keyboard1.decode('utf-8'))
keyboard2 = str(keyboard2.decode('utf-8'))


# –û–°–ù–û–í–ù–ê–Ø –ß–ê–°–¢–¨ –ë–û–¢–ê
while True:
    for event in longpoll.listen():
        if event.type == VkEventType.MESSAGE_NEW:
            response = event.text.lower()
            keyboard = create_keyboard(response)

            if event.from_user and not event.from_me:
                print('id: ' + str(event.user_id) + '   –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: ' + str(event.text) + str(datetime.strftime(datetime.now(), "   %H:%M:%S")))
                if response == "–Ω–∞—á–∞—Ç—å":
                    # –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è –°–æ—Ñ—å–∏
                    if event.user_id == 79247291:
                        vk_session.method('messages.send',
                                          {'user_id': event.user_id,
                                           'message': '–ü—Ä–∏–≤–µ—Ç, —Å–æ–ª–Ω—Ü–µ üòΩ \n–ì–ª—è–Ω—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é üòâ',
                                           'keyboard': keyboard1, 'random_id': 0})

                    else:
                        vk_session.method('messages.send',
                                          {'user_id': event.user_id,
                                       'message': '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø —Å–æ–∑–¥–∞–Ω, —á—Ç–æ–±—ã —Ç—ã –≤—Å–µ–≥–¥–∞ –∏–º–µ–ª –ø–æ–¥ —Ä—É–∫–æ–π —Å–≤–æ–µ —É—á–µ–±–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ. –ü–æ—Å–º–æ—Ç—Ä–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –∫ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é :)\n–í–ù–ò–ú–ê–ù–ò–ï: –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ!',
                                       'keyboard':keyboard1, 'random_id': 0})

                elif response == '–ø—Ä–∏–≤–µ—Ç' or response == '–ø—Ä–∏–≤–µ—Ç!':
                    vk_session.method('messages.send',
                                      {'user_id': event.user_id, 'message': '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π! \n–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –ø–æ—Å–º–æ—Ç—Ä–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é.', 'keyboard': keyboard1, 'random_id': 0})

                elif response == '–∫–∞–∫ –¥–µ–ª–∞' or response == '–∫–∞–∫ –¥–µ–ª–∞?':
                    vk_session.method('messages.send',
                                      {'user_id': event.user_id, 'message': '–•–æ—Ä–æ—à–æ, —Å–ø–∞—Å–∏–±–æ)', 'random_id': 0})

                elif response == '—Å–ø–∞—Å–∏–±–æ' or response == '—Å–ø–∞—Å–∏–±–æ!' or response == '—Å–ø–∞—Å–∏–±–æ)' or response == '—Å–øc':
                    vk_session.method('messages.send',
                                      {'user_id': event.user_id, 'message': '–í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å üòä', 'random_id': 0})


                # –§–≠–ú
                elif response == "—Ñ—ç–º1" or response == "—Ñ—ç–º 1" or response == "—Ñ—ç–º2" or response == "—Ñ—ç–º 2" or response == "—Ñ—ç–º3" or response == "—Ñ—ç–º 3" or response == "—Ñ—ç–º1–º" or response == "—Ñ—ç–º1 –º":
                    url_part = 'http://fem.vavt.ru'
                    check_url = url_part + '/schedule'

                    if response == "—Ñ—ç–º1" or response == "—Ñ—ç–º 1":
                        cours_name = '1 –∫—É—Ä—Å  –æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞'
                    elif response == "—Ñ—ç–º2" or response == "—Ñ—ç–º 2":
                        cours_name = '2 –∫—É—Ä—Å  '
                    elif response == "—Ñ—ç–º3" or response == "—Ñ—ç–º 3":
                        cours_name = '3 –∫—É—Ä—Å   –æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞'
                    #elif response == '—Ñ—ç–º4' or response == '—Ñ—ç–º 4':
                        #cours_name =
                    elif response == "—Ñ—ç–º1–º" or response == "—Ñ—ç–º1 –º":
                        cours_name = '1 –∫—É—Ä—Å (–º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞)  '

                    vk_session.method('messages.send',
                                      {'user_id': event.user_id, 'message': '–°–µ–∫—É–Ω–¥—É...', 'random_id': 0})

                    base_url = url_part + vavt_schedule_parse_1(check_url, headers)

                    attachments1 = []
                    upload1 = VkUpload(vk_session)
                    image_url1 = url_part + img_parse(base_url,headers)
                    image1 = session.get(image_url1, stream=True)
                    photo1 = upload1.photo_messages(photos=image1.raw)[0]
                    attachments1.append('photo{}_{}'.format(photo1['owner_id'], photo1['id']))
                    vk_session.method('messages.send',
                                      {'user_id': event.user_id, 'message': '–í—É–∞–ª—è! –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é:',
                                       'attachment': attachments1,
                                       'random_id': 0})

                    vk_session.method('messages.send',
                                      {'user_id': event.user_id,
                                       'message': '–ü—Ä–æ–≤–µ—Ä—è—é —Å–∞–π—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é...',
                                       'random_id': 0})

                    try:
                        base_url = url_part + vavt_schedule_parse_2(check_url, headers)

                        attachments2 = []
                        upload2 = VkUpload(vk_session)
                        image_url2 = url_part + img_parse(base_url,headers)
                        image2 = session.get(image_url2, stream=True)
                        photo2 = upload2.photo_messages(photos=image2.raw)[0]
                        attachments2.append('photo{}_{}'.format(photo2['owner_id'], photo2['id']))
                        vk_session.method('messages.send',
                                          {'user_id': event.user_id, 'message': '–ù–∞—à–µ–ª! –í–æ—Ç –æ–Ω–æ:',
                                           'attachment': attachments2,
                                           'random_id': 0})
                    except:
                        vk_session.method('messages.send',
                                          {'user_id': event.user_id,
                                           'message': 'Error 404 not found.\n–ï—â–µ –Ω–µ –≤—ã–ª–æ–∂–∏–ª–∏:)',
                                           'random_id': 0})

                # –ú–ü–§
                elif response == "–º–ø—Ñ1" or response == "–º–ø—Ñ 1" or response == "–º–ø—Ñ1—Å–ø" or response == "–º–ø—Ñ1 —Å–ø" or response == "–º–ø—Ñ 1 —Å–ø" or \
                        response == "–º–ø—Ñ2" or response == "–º–ø—Ñ 2" or response == "–º–ø—Ñ2—Å–ø" or response == "–º–ø—Ñ2 —Å–ø" or response == "–º–ø—Ñ 2 —Å–ø" or \
                        response == "–º–ø—Ñ31" or response == "–º–ø—Ñ 31" or response == "–º–ø—Ñ32" or response == "–º–ø—Ñ 32" or response == '–º–ø—Ñ4' or \
                        response == '–º–ø—Ñ 4' or response == "–º–ø—Ñ1–º" or response == "–º–ø—Ñ1 –º":
                    url_part = 'http://mpf.vavt.ru'
                    check_url = url_part + '/schedule'
                    if response == "–º–ø—Ñ1" or response == "–º–ø—Ñ 1":
                        cours_name = '1 –∫—É—Ä—Å  –æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞'
                    if response == "–º–ø—Ñ1—Å–ø" or response == "–º–ø—Ñ1 —Å–ø" or response == "–º–ø—Ñ 1 —Å–ø":
                        cours_name = '1 –∫—É—Ä—Å (—Å–µ—Ç–µ–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ-–ø—Ä–∞–≤–æ–≤–æ–π —Å —É–≥–ª—É–±–ª–µ–Ω–Ω—ã–º –∏–∑—É—á–µ–Ω–∏–µ–º –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –∏ –ø—Ä–∞–≤–∞ –µ–≤—Ä–æ–ø–µ–π—Å–∫–∏—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π"  –æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞'
                    elif response == "–º–ø—Ñ2" or response == "–º–ø—Ñ 2":
                        cours_name = '2 –∫—É—Ä—Å  –æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞'
                    elif response == "–º–ø—Ñ2—Å–ø" or response == "–º–ø—Ñ2 —Å–ø" or response == "–º–ø—Ñ 2 —Å–ø":
                        cours_name = '2 –∫—É—Ä—Å (—Å–µ—Ç–µ–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ-–ø—Ä–∞–≤–æ–≤–æ–π —Å —É–≥–ª—É–±–ª–µ–Ω–Ω—ã–º –∏–∑—É—á–µ–Ω–∏–µ–º –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞ –∏ –ø—Ä–∞–≤–∞ –µ–≤—Ä–æ–ø–µ–π—Å–∫–∏—Ö –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π"  –æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞'
                    elif response == "–º–ø—Ñ31" or response == "–º–ø—Ñ 31":
                        cours_name = '3 –∫—É—Ä—Å (1 –ø–æ—Ç–æ–∫) –æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞  '
                    elif response == "–º–ø—Ñ32" or response == "–º–ø—Ñ 32":
                        cours_name = '3 –∫—É—Ä—Å (2 –ø–æ—Ç–æ–∫) –æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞  '
                    #elif response == '–º–ø—Ñ4' or response == '–º–ø—Ñ 4':
                        #cours_name =
                    elif response == "–º–ø—Ñ1–º" or response == "–º–ø—Ñ1 –º":
                        cours_name = '1 –∫—É—Ä—Å (–º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞)   –æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞'

                    vk_session.method('messages.send',
                                      {'user_id': event.user_id, 'message': '–°–µ–∫—É–Ω–¥—É...', 'random_id': 0})
                    base_url = url_part + vavt_schedule_parse_1(check_url, headers)

                    attachments1 = []
                    upload1 = VkUpload(vk_session)
                    image_url1 = url_part + img_parse(base_url, headers)
                    image1 = session.get(image_url1, stream=True)
                    photo1 = upload1.photo_messages(photos=image1.raw)[0]
                    attachments1.append('photo{}_{}'.format(photo1['owner_id'], photo1['id']))
                    vk_session.method('messages.send',
                                      {'user_id': event.user_id, 'message': '–í—É–∞–ª—è! –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é:',
                                       'attachment': attachments1,
                                       'random_id': 0})

                    vk_session.method('messages.send',
                                      {'user_id': event.user_id,
                                       'message': '–ü—Ä–æ–≤–µ—Ä—è—é —Å–∞–π—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é...',
                                       'random_id': 0})

                    try:
                        base_url = url_part + vavt_schedule_parse_2(check_url, headers)

                        attachments2 = []
                        upload2 = VkUpload(vk_session)
                        image_url2 = url_part + img_parse(base_url, headers)
                        image2 = session.get(image_url2, stream=True)
                        photo2 = upload2.photo_messages(photos=image2.raw)[0]
                        attachments2.append('photo{}_{}'.format(photo2['owner_id'], photo2['id']))
                        vk_session.method('messages.send',
                                          {'user_id': event.user_id, 'message': '–ù–∞—à–µ–ª! –í–æ—Ç –æ–Ω–æ:',
                                           'attachment': attachments2,
                                           'random_id': 0})
                    except:
                        vk_session.method('messages.send',
                                          {'user_id': event.user_id,
                                           'message': 'Error 404 not found.\n–ï—â–µ –Ω–µ –≤—ã–ª–æ–∂–∏–ª–∏:)',
                                           'random_id': 0})

                # –§–í–ú
                elif response == "—Ñ–≤–º1" or response == "—Ñ–≤–º 1" or response == "—Ñ–≤–º2" or response == "—Ñ–≤–º 2" or response == "—Ñ–≤–º3" or response == "—Ñ–≤–º 3" or response == '—Ñ–≤–º4' or response == '—Ñ–≤–º 4':
                    url_part = 'http://fvm.vavt.ru'
                    check_url = url_part + '/schedule'
                    if response == "—Ñ–≤–º1" or response == "—Ñ–≤–º 1":
                        cours_name = '1 –∫—É—Ä—Å  –æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞'
                    elif response == "—Ñ–≤–º2" or response == "—Ñ–≤–º 2":
                        cours_name = '2 –∫—É—Ä—Å  –æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞'
                    elif response == "—Ñ–≤–º3" or response == "—Ñ–≤–º 3":
                        cours_name = '3 –∫—É—Ä—Å  –æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞'
                    #elif response == '—Ñ–≤–º4' or response == '—Ñ–≤–º 4':
                        #cours_name =

                    vk_session.method('messages.send',
                                      {'user_id': event.user_id, 'message': '–°–µ–∫—É–Ω–¥—É...', 'random_id': 0})
                    base_url = url_part + vavt_schedule_parse_1(check_url, headers)

                    attachments1 = []
                    upload1 = VkUpload(vk_session)
                    image_url1 = url_part + img_parse(base_url, headers)
                    image1 = session.get(image_url1, stream=True)
                    photo1 = upload1.photo_messages(photos=image1.raw)[0]
                    attachments1.append('photo{}_{}'.format(photo1['owner_id'], photo1['id']))
                    vk_session.method('messages.send',
                                      {'user_id': event.user_id, 'message': '–í—É–∞–ª—è! –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é:',
                                       'attachment': attachments1,
                                       'random_id': 0})

                    vk_session.method('messages.send',
                                      {'user_id': event.user_id,
                                       'message': '–ü—Ä–æ–≤–µ—Ä—è—é —Å–∞–π—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é...',
                                       'random_id': 0})

                    try:
                        base_url = url_part + vavt_schedule_parse_2(check_url, headers)

                        attachments2 = []
                        upload2 = VkUpload(vk_session)
                        image_url2 = url_part + img_parse(base_url, headers)
                        image2 = session.get(image_url2, stream=True)
                        photo2 = upload2.photo_messages(photos=image2.raw)[0]
                        attachments2.append('photo{}_{}'.format(photo2['owner_id'], photo2['id']))
                        vk_session.method('messages.send',
                                          {'user_id': event.user_id, 'message': '–ù–∞—à–µ–ª! –í–æ—Ç –æ–Ω–æ:',
                                           'attachment': attachments2,
                                           'random_id': 0})
                    except:
                        vk_session.method('messages.send',
                                          {'user_id': event.user_id,
                                           'message': 'Error 404 not found.\n–ï—â–µ –Ω–µ –≤—ã–ª–æ–∂–∏–ª–∏:)',
                                           'random_id': 0})


                # –§–ú–§
                elif response == "—Ñ–º—Ñ1" or response == "—Ñ–º—Ñ 1" or response == "—Ñ–º—Ñ2" or response == "—Ñ–º—Ñ 2" or response == "—Ñ–º—Ñ3" or response == "—Ñ–º—Ñ 3" or response == '—Ñ–º—Ñ1–º' or response == '—Ñ–º—Ñ1 –º' or response == '—Ñ–º—Ñ4' or response == '—Ñ–º—Ñ 4':
                    url_part = 'http://fmf.vavt.ru'
                    check_url = url_part + '/schedule'
                    if response == "—Ñ–º—Ñ1" or response == "—Ñ–º—Ñ 1":
                        cours_name = '1 –∫—É—Ä—Å   –æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞'
                    elif response == "—Ñ–º—Ñ2" or response == "—Ñ–º—Ñ 2":
                        cours_name = '2 –∫—É—Ä—Å  –æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞'
                    elif response == "—Ñ–º—Ñ3" or response == "—Ñ–º—Ñ 3":
                        cours_name = '3 –∫—É—Ä—Å   –æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞'
                    #elif response == '—Ñ–º—Ñ4' or response == '—Ñ–º—Ñ 4':
                        #cours_name =
                    elif response == '—Ñ–º—Ñ1–º' or response == '—Ñ–º—Ñ1 –º':
                        cours_name = '1 –∫—É—Ä—Å (–º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞)   '

                    vk_session.method('messages.send',
                                      {'user_id': event.user_id, 'message': '–°–µ–∫—É–Ω–¥—É...', 'random_id': 0})
                    base_url = url_part + vavt_schedule_parse_1(check_url, headers)

                    attachments1 = []
                    upload1 = VkUpload(vk_session)
                    image_url1 = url_part + img_parse(base_url, headers)
                    image1 = session.get(image_url1, stream=True)
                    photo1 = upload1.photo_messages(photos=image1.raw)[0]
                    attachments1.append('photo{}_{}'.format(photo1['owner_id'], photo1['id']))
                    vk_session.method('messages.send',
                                      {'user_id': event.user_id, 'message': '–í—É–∞–ª—è! –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é:',
                                       'attachment': attachments1,
                                       'random_id': 0})

                    vk_session.method('messages.send',
                                      {'user_id': event.user_id,
                                       'message': '–ü—Ä–æ–≤–µ—Ä—è—é —Å–∞–π—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é...',
                                       'random_id': 0})

                    try:
                        base_url = url_part + vavt_schedule_parse_2(check_url, headers)

                        attachments2 = []
                        upload2 = VkUpload(vk_session)
                        image_url2 = url_part + img_parse(base_url, headers)
                        image2 = session.get(image_url2, stream=True)
                        photo2 = upload2.photo_messages(photos=image2.raw)[0]
                        attachments2.append('photo{}_{}'.format(photo2['owner_id'], photo2['id']))
                        vk_session.method('messages.send',
                                          {'user_id': event.user_id, 'message': '–ù–∞—à–µ–ª! –í–æ—Ç –æ–Ω–æ:',
                                           'attachment': attachments2,
                                           'random_id': 0})
                    except:
                        vk_session.method('messages.send',
                                          {'user_id': event.user_id,
                                           'message': 'Error 404 not found.\n–ï—â–µ –Ω–µ –≤—ã–ª–æ–∂–∏–ª–∏:)',
                                           'random_id': 0})



                elif response == '–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è':
                    vk_session.method('messages.send',
                                      {'user_id': event.user_id, 'message' :'–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞ –∏ –∫—É—Ä—Å.\n–ï—Å–ª–∏ —Ç—ã —É—á–∏—à—å—Å—è –Ω–∞ –ú–ü–§, —Ç–æ –º–æ–∂–µ—à—å '
                                                                            '–¥–æ–ø–∏—Å–∞—Ç—å –ø–æ—Å–ª–µ –∫—É—Ä—Å–∞ "—Å–ø", –∏ —Ç–æ–≥–¥–∞ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Ç–µ–≤–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è. '
                                                                            '–î–ª—è —Ç—Ä–µ—Ç—å–µ–∫—É—Ä—Å–Ω–∏–∫–æ–≤ –ú–ü–§ —Ü–∏—Ñ—Ä–∞ 1 –∏–ª–∏ 2 –ø–æ—Å–ª–µ –∫—É—Ä—Å–∞ –æ–∑–Ω–∞—á–∞–µ—Ç –ø–æ—Ç–æ–∫.\n'
                                                                            '–ï—Å–ª–∏ —Ç—ã –º–∞–≥–∏—Å—Ç—Ä–∞–Ω—Ç, —Ç–æ –¥–æ–±–∞–≤—å –±—É–∫–≤—É "–º" –ø–æ—Å–ª–µ –Ω–æ–º–µ—Ä–∞ –∫—É—Ä—Å–∞.\n'
                                                                            '–¢—ã —Ç–∞–∫ –∂–µ –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É –∏–ª–∏ –Ω–∞–ø–∏—Å–∞–≤ "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã".\n'
                                                                            '–ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!', 'keyboard': keyboard2, 'random_id': 0})

                elif response == '–¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã':
                    vk_session.method('messages.send',
                                      {'user_id': event.user_id,'message' :'–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ (–±–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç):\n'
                                                                            '—Ñ—ç–º1\n—Ñ—ç–º2\n—Ñ—ç–º3\n‚Äì‚Äì‚Äì‚Äì‚Äì\n–º–ø—Ñ1\n–º–ø—Ñ1—Å–ø\n–º–ø—Ñ2\n–º–ø—Ñ2—Å–ø\n–º–ø—Ñ31\n–º–ø—Ñ32\n ‚Äì‚Äì‚Äì‚Äì‚Äì\n'
                                                                            '—Ñ–≤–º1\n—Ñ–≤–º2\n—Ñ–≤–º3\n‚Äì‚Äì‚Äì‚Äì‚Äì\n—Ñ–º—Ñ1\n—Ñ–º—Ñ2\n—Ñ–º—Ñ3\n\n'
                                                                            '–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ (–º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞):\n—Ñ—ç–º1–º\n–º–ø—Ñ1–º\n—Ñ–º—Ñ1–º', 'keyboard':keyboard,'random_id': 0})

                elif response == '—Ä–∞–±–æ—Ç–∞–µ—à—å?':
                    vk_session.method('messages.send',
                                      {'user_id': event.user_id,'message' :'–†–∞–±–æ—Ç–∞—é.','random_id': 0})

                elif response == '–±–æ—Ç' or response == '–±–æ—Ç?' or response == '–±–æ—Ç!':
                    vk_session.method('messages.send',
                                      {'user_id': event.user_id,'message' :'–ß—Ç–æ?','random_id': 0})

                elif response == '—á—Ç–æ –¥–µ–ª–∞–µ—à—å' or response == '—á—Ç–æ –¥–µ–ª–∞–µ—à—å?' or response == '—á–µ –¥–µ–ª–∞–µ—à—å' or response == '—á–µ –¥–µ–ª–∞–µ—à—å?':
                    vk_session.method('messages.send',
                                      {'user_id': event.user_id,'message' :'–†–∞–±–æ—Ç–∞—é.','random_id': 0})

                else:
                    vk_session.method('messages.send',
                                      {'user_id': event.user_id, 'message': '–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é... \n–ù–∞–∂–º–∏ "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã", —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥.','keyboard':keyboard2, 'random_id': 0})
            time.sleep(1)